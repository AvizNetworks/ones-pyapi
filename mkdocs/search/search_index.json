{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#welcome-to-ones-api","title":"Welcome to Ones-Api","text":"<p>ONES SDK for developers and Network Engineers</p>"},{"location":"#ones-python-sdk","title":"Ones Python SDK","text":"<p>The goal is to create a Python SDK for existing ONES API infrastructure. It helps to connect and perform all actions that are currently performing using API, with the help of functions.</p>"},{"location":"#usage-","title":"Usage-","text":"<ul> <li>It can be used by existing ONES users and help to get stats related to their infrastructure.</li> <li>People will be able to integrate ONES with other products using ONES-SDK.</li> <li>Network Engineers get details related to switches, devices etc using commands.</li> </ul>"},{"location":"#tools-and-technologies-","title":"Tools and Technologies-","text":"<ul> <li>Python (version 3.9.6)</li> <li>Modules - requests (It will help in making HTTP/S calls with API)</li> <li>setuputil (for creating python package that will install using pip install and can be used with  any python codebase)</li> </ul>"},{"location":"#ones_client-","title":"Ones_Client-","text":"<p>ones_client is for developers and network engineers to connect and integrate with ONES API's functionality.</p> <ul> <li>SDK will contain <code>OnesClient</code>, that will contain multiple modules, and each module will perform    specified tasks.</li> </ul>"},{"location":"ONES-API/HEALTH-API/health-api/","title":"Health APIs","text":"Method API Status GET faulty_psus /api/Dashboards/psuList GET faulty_fans /api/Dashboards/fanList GET link_flaps /api/Dashboards/interfaceStatus GET cpu_utilization /api/Health/cpuUtilizationofDevice GET memory_utilization /api/Health/memoryUtilizationofDevice GET cpu_core_temperature /api/Health/coreCpuTemperature GET fan_speed /api/Health/getFanSpeed GET psu_temperature /api/Health/getPsuTemp GET psu_voltage /api/Health/getPsuTemp GET psu_current /api/Health/getPsuCurrent GET psu_power /api/Health/getPsuPower GET services_of_device /api/Health/servicesOfDevice GET cpu_consuption_data /api/Health/getCpuConsuptionData GET memory_consuption_data /api/Health/getMemoryConsuptionData GET bgp_neighbors /api/Bgps/neighbors"},{"location":"ONES-API/HEALTH-API/health-client/","title":"Health client","text":""},{"location":"ONES-API/HEALTH-API/health-client/#get_faulty_psus","title":"get_faulty_psus","text":"<pre><code>def get_faulty_psus(self):\n        \"\"\"\n        output -&gt; list of devices and connections\n        \"\"\"\n        request_handler(self.url, faulty_psus,self.access_token, None)\n</code></pre>"},{"location":"ONES-API/HEALTH-API/health-client/#get_faulty_fans","title":"get_faulty_fans","text":"<pre><code>def get_faulty_fans(self):\n        \"\"\"\n        Return Fan List\n        \"\"\"\n        request_handler(self.url, faulty_fans, self.access_token, None)\n</code></pre>"},{"location":"ONES-API/HEALTH-API/health-client/#get_link_flaps","title":"get_link_flaps","text":"<pre><code>def get_link_flaps(self, arg1):\n        \"\"\"\n        Return interface status\n        \"\"\"\n        request_handler_with_query_params(self.url, link_flaps, self.access_token, None, arg1)\n</code></pre>"},{"location":"ONES-API/HEALTH-API/health-client/#get_cpu_utilization","title":"get_cpu_utilization","text":"<pre><code>def get_cpu_utilization(self, arg1):\n        \"\"\"\n        query_params -&gt; {\n            \"fromDate\" : \"2023-05-12 11:55:24\",\n            \"toDate\" : \"2023-05-12 12:55:24\",\n            \"deviceAddress\" : \"10.4.4.55\"\n        }\n        \"\"\"\n        request_handler_with_query_params(self.url, cpu_utilization, self.access_token, None, arg1)\n</code></pre>"},{"location":"ONES-API/HEALTH-API/health-client/#get_memory_utilization","title":"get_memory_utilization","text":"<pre><code>def get_memory_utilization(self, arg1):\n        \"\"\"\n        query_params -&gt; {\n            \"fromDate\" : \"2023-05-12 11:55:24\",\n            \"toDate\" : \"2023-05-12 12:55:24\",\n            \"deviceAddress\" : \"10.4.4.55\"\n        }\n        \"\"\"\n        request_handler_with_query_params(self.url, memory_utilization, self.access_token, None, arg1)\n</code></pre>"},{"location":"ONES-API/HEALTH-API/health-client/#get_cpu_core_temperature","title":"get_cpu_core_temperature","text":"<pre><code>def get_cpu_core_temperaure(self, arg1):\n        \"\"\"\n        query_params -&gt; {\n            \"fromDate\" : \"2023-05-12 11:55:24\",\n            \"toDate\" : \"2023-05-12 12:55:24\",\n            \"deviceAddress\" : \"10.4.4.55\"\n        }\n        \"\"\"\n        request_handler_with_query_params(self.url, cpu_core_temperaure, self.access_token, None, arg1)\n</code></pre>"},{"location":"ONES-API/HEALTH-API/health-client/#get_psu_temperature","title":"get_psu_temperature","text":"<pre><code>def get_psu_temperature(self, arg1):\n        \"\"\" \n        query_params -&gt; {\n            \"fromDate\" : \"2023-05-12 11:55:24\",\n            \"toDate\" : \"2023-05-12 12:55:24\",\n            \"deviceAddress\" : \"10.4.4.55\"\n        }\n        \"\"\"\n        request_handler_with_query_params(self.url, psu_temperature, self.access_token, None, arg1)\n</code></pre>"},{"location":"ONES-API/HEALTH-API/health-client/#get_psu_voltage","title":"get_psu_voltage","text":"<pre><code>def get_psu_voltage(self, arg1):\n        \"\"\" \n        query_params -&gt; {\n            \"fromDate\" : \"2023-05-12 11:55:24\",\n            \"toDate\" : \"2023-05-12 12:55:24\",\n            \"deviceAddress\" : \"10.4.4.55\"\n        }\n        \"\"\"\n        request_handler_with_query_params ( self.url, psu_voltage, self.access_token, None, arg1)\n</code></pre>"},{"location":"ONES-API/HEALTH-API/health-client/#get_psu_current","title":"get_psu_current","text":"<pre><code>def get_psu_current(self, arg1):\n        \"\"\" \n        query_params -&gt; {\n           \"fromDate\" : \"2023-05-12 11:55:24\",\n           \"toDate\" : \"2023-05-12 12:55:24\",\n           \"deviceAddress\" : \"10.4.4.55\"\n        }\n        \"\"\"\n        request_handler_with_query_params(self.url, psu_current, self.access_token, None, arg1)\n</code></pre>"},{"location":"ONES-API/HEALTH-API/health-client/#get_fan_speed","title":"get_fan_speed","text":"<pre><code>def get_fan_speed(self, arg1):\n        \"\"\" \n        query_params -&gt; {\n            \"fromDate\" : \"2023-05-12 11:55:24\",\n            \"toDate\" : \"2023-05-12 12:55:24\",\n            \"deviceAddress\" : \"10.4.4.55\"\n        }\n        \"\"\"\n        request_handler_with_query_params(self.url, fan_speed, self.access_token, None, arg1)\n</code></pre>"},{"location":"ONES-API/HEALTH-API/health-client/#get_psu_power","title":"get_psu_power","text":"<pre><code>def get_psu_power(self, arg1):\n        \"\"\" \n        query_params -&gt; {\n            \"fromDate\" : \"2023-05-12 11:55:24\",\n            \"toDate\" : \"2023-05-12 12:55:24\",\n            \" deviceAddress\" : \"10.4.4.55\"\n        }\n        \"\"\"\n        request_handler_with_query_params(self.url, psu_power, self.access_token, None, arg1)\n</code></pre>"},{"location":"ONES-API/HEALTH-API/health-client/#get_health_services_cpu","title":"get_health_services_cpu","text":"<pre><code>def get_health_services_cpu(self, arg1):\n        \"\"\" \n        query_params -&gt; {\n            \"fromDate\" : \"2023-05-12 11:55:24\",\n            \"toDate\" : \"2023-05-12 12:55:24\",\n            \"deviceAddress\" : \"10.4.4.55\"\n        }\n        \"\"\"\n        request_handler_with_query_params(self.url, health_services_cpu, self.access_token, None, arg1)\n</code></pre>"},{"location":"ONES-API/HEALTH-API/health-client/#get_health_services_memory","title":"get_health_services_memory","text":"<pre><code>def get_health_services_memory(self, arg1):\n        \"\"\" \n        query_params -&gt; {\n            \"fromDate\" : \"2023-05-12 11:55:24\",\n            \"toDate\" : \"2023-05-12 12:55:24\",\n            \"deviceAddress\" : \"10.4.4.55\"\n        }\n        \"\"\"\n        request_handler_with_query_params(self.url, health_services_memory, self.access_token, None, arg1)\n</code></pre>"},{"location":"ONES-API/HEALTH-API/health-client/#get_bgp_neighbors","title":"get_bgp_neighbors","text":"<pre><code> def get_health_bgp_neighbors(self, arg1):\n        \"\"\" \n        query_params -&gt; {\n            \"fromDate\" : \"2023-04-04 04:54:27\",\n            \"toDate\" : \"2023-04-04 05:54:27\",\n            \"deviceAddress\" : \"10.4.4.55\"\n        }\n        \"\"\"\n        request_handler_with_query_params(self.url, health_bgp_neighbors, self.access_token, None, arg1)\n</code></pre>"},{"location":"ONES-API/HEALTH-API/health-client/#get_health_transcievers","title":"get_health_transcievers","text":"<pre><code>def get_health_trancievers(self, arg1):\n        \"\"\" \n        query_params -&gt; {\n            \"ipAddress\" : \"10.4.4.55\",\n            \"ifName\" : \"Ethernet0\",\n            \"fromDate\" : \"2023-06-26 10:48:55\",\n            \"toDate\" : \"2023-06-26 11:48:55\"\n        }\n        \"\"\"    \n        request_handler_with_query_params(self.url, health_transcievers, self.access_token, None, arg1)\n</code></pre>"},{"location":"ONES-API/HEALTH-API/health-client/#get_health_running_services","title":"get_health_running_services","text":"<pre><code>def get_health_running_services(self, arg1):\n        \"\"\" \n        query_params -&gt; {\n                    \"fromDate\" : \"2023-05-12 11:55:24\",\n                    \"toDate\" : \"2023-05-12 12:55:24\",\n                    \"deviceAddress\" : \"10.4.4.55\"\n        }\n        \"\"\"\n        request_handler_with_query_params(self.url, health_running_services, self.access_token, None, arg1)\n</code></pre>"},{"location":"ONES-API/HEALTH-API/health-connect-methods/","title":"Health connect methods","text":""},{"location":"ONES-API/HEALTH-API/health-connect-methods/#calling-methods-for-health-apis","title":"Calling Methods For Health APIs","text":""},{"location":"ONES-API/HEALTH-API/health-connect-methods/#faulty_psus","title":"FAULTY_PSUs","text":"<pre><code>print(\"....................FAULTY_PSUs.....................\")\nprint(conn.get_faulty_psus())\nprint(\"....................FAULTY_PSUSs.....................\")\n</code></pre>"},{"location":"ONES-API/HEALTH-API/health-connect-methods/#faulty_fans","title":"FAULTY_FANS","text":"<pre><code>print(\"....................FAULTY_FANS.....................\")\nprint(conn.get_faulty_fans())\nprint(\"....................FAULTY_FANS.....................\")\n</code></pre>"},{"location":"ONES-API/HEALTH-API/health-connect-methods/#link_flaps","title":"LINK_FLAPS","text":"<pre><code>print(\"....................LINK_FLAPS.....................\")\nquery_params= {\n  \"time\" : \"5 minutes\",\n  \"limit\" : \"10\"\n}\nprint(conn.get_link_flaps(query_params))\nprint(\"....................LINK_FLAPS.....................\")\n</code></pre>"},{"location":"ONES-API/HEALTH-API/health-connect-methods/#cpu_utilization","title":"CPU_UTILIZATION","text":"<pre><code>print(\"....................CPU_UTILIZATION....................\")\nquery_params =  {\n  \"fromDate\" : \"2023-05-12 11:55:24\",\n  \"toDate\" : \"2023-05-12 12:55:24\",\n  \"deviceAddress\" : \"10.4.4.55\"\n}\nprint(conn.get_cpu_utilization(query_params))\nprint(\"....................CPU_UTILIZATION.....................\")\n</code></pre>"},{"location":"ONES-API/HEALTH-API/health-connect-methods/#memory_utilization","title":"MEMORY_UTILIZATION","text":"<pre><code>print(\"....................MEMORY_UTILIZATION....................\")\nquery_params = {\n  \"fromDate\" : \"2023-05-12 11:55:24\",\n  \"toDate\" : \"2023-05-12 12:55:24\",\n  \"deviceAddress\" : \"10.4.4.55\"\n}\nprint(conn.get_memory_utilization(query_params))\nprint(\"....................MEMORY_UTILIZATION.....................\")\n</code></pre>"},{"location":"ONES-API/HEALTH-API/health-connect-methods/#cpu_core_temperature","title":"CPU_CORE_TEMPERATURE","text":"<pre><code>print(\"....................CPU_CORE_TEMPERATURE....................\")\nquery_params = {\n  \"fromDate\" : \"2023-05-12 11:55:24\",\n  \"toDate\" : \"2023-05-12 12:55:24\",\n  \"deviceAddress\" : \"10.4.4.55\"\n}\nprint(conn.get_cpu_core_temperaure(query_params))\nprint(\"....................CPU_CORE_TEMPERATURE.....................\")\n</code></pre>"},{"location":"ONES-API/HEALTH-API/health-connect-methods/#psu_temperature","title":"PSU_TEMPERATURE","text":"<pre><code>print(\"....................PSU_TEMPERATURE....................\")\nquery_params = {\n  \"fromDate\" : \"2023-05-12 11:55:24\",\n  \"toDate\" : \"2023-05-12 12:55:24\",\n  \"deviceAddress\" : \"10.4.4.55\"\n}\nprint(conn.get_psu_temperature(query_params))\nprint(\"....................PSU_TEMPERATURE....................\")\n</code></pre>"},{"location":"ONES-API/HEALTH-API/health-connect-methods/#psu_voltage","title":"PSU_VOLTAGE","text":"<pre><code>print(\"....................PSU_VOLTAGE....................\")\nquery_params = {\n  \"fromDate\" : \"2023-05-12 11:55:24\",\n  \"toDate\" : \"2023-05-12 12:55:24\",\n  \"deviceAddress\" : \"10.4.4.55\"\n}\nprint(conn.get_psu_voltage(query_params))\nprint(\"....................PSU_VOLTAGE....................\")\n</code></pre>"},{"location":"ONES-API/HEALTH-API/health-connect-methods/#psu_current","title":"PSU_CURRENT","text":"<pre><code>print(\"....................PSU_CURRENT....................\")\nquery_params = {\n  \"fromDate\" : \"2023-05-12 11:55:24\",\n  \"toDate\" : \"2023-05-12 12:55:24\",\n  \"deviceAddress\" : \"10.4.4.55\"\n}\nprint(conn.get_psu_current(query_params))\nprint(\"....................PSU_CURRENT....................\")\n</code></pre>"},{"location":"ONES-API/HEALTH-API/health-connect-methods/#fan_speed","title":"FAN_SPEED","text":"<pre><code>print(\"....................FAN_SPEED....................\")\nquery_params = {\n  \"fromDate\" : \"2023-05-12 11:55:24\",\n  \"toDate\" : \"2023-05-12 12:55:24\",\n  \"deviceAddress\" : \"10.4.4.55\"\n}\nprint(conn.get_fan_speed(query_params))\nprint(\"....................FAN_SPEED....................\")\n</code></pre>"},{"location":"ONES-API/HEALTH-API/health-connect-methods/#psu_power","title":"PSU_POWER","text":"<pre><code>print(\"....................PSU_POWER....................\")\nquery_params = {\n  \"fromDate\" : \"2023-05-12 11:55:24\",\n  \"toDate\" : \"2023-05-12 12:55:24\",\n  \"deviceAddress\" : \"10.4.4.55\"\n}\nprint(conn.get_psu_power(query_params))\nprint(\"....................PSU_POWER....................\")\n</code></pre>"},{"location":"ONES-API/HEALTH-API/health-connect-methods/#health_services_cpu","title":"HEALTH_SERVICES_CPU","text":"<pre><code>print(\"....................HEALTH_SERVICES_CPU....................\")\nquery_params = {\n  \"fromDate\" : \"2023-05-12 11:55:24\",\n  \"toDate\" : \"2023-05-12 12:55:24\",\n  \"deviceAddress\" : \"10.4.4.55\"\n}\nprint(conn.get_health_services_cpu(query_params))\nprint(\"....................HEALTH_SERVICES_CPU....................\")\n</code></pre>"},{"location":"ONES-API/HEALTH-API/health-connect-methods/#health_services_memory","title":"HEALTH_SERVICES_MEMORY","text":"<pre><code>print(\"....................HEALTH_SERVICES_MEMORY....................\")\nquery_params = {\n  \"fromDate\" : \"2023-05-12 11:55:24\",\n  \"toDate\" : \"2023-05-12 12:55:24\",\n  \"deviceAddress\" : \"10.4.4.55\"\n}\nprint(conn.get_health_services_memory(query_params))\nprint(\"....................HEALTH_SERVICES_MEMORY....................\")\n</code></pre>"},{"location":"ONES-API/HEALTH-API/health-connect-methods/#health_bgp_neighbors","title":"HEALTH_BGP_NEIGHBORS","text":"<pre><code>print(\"....................HEALTH_BGP NEIGHBORS....................\")\nquery_params = {\n  \"fromDate\" : \"2023-04-04 04:54:27\",\n  \"toDate\" : \"2023-04-04 05:54:27\",\n  \"deviceAddress\" : \"10.4.4.55\"\n}\nprint(conn.get_health_bgp_neighbors(query_params))\nprint(\"....................HEALTH_BGP_NEIGHBORS....................\")\n</code></pre>"},{"location":"ONES-API/HEALTH-API/health-connect-methods/#health_transcievers","title":"HEALTH_TRANSCIEVERS","text":"<pre><code>print(\"....................HEALTH_TRANSCIEVERS....................\")\nquery_params = {\n  \"ipAddress\" : \"10.4.4.55\",\n  \"ifName\" : \"Ethernet0\",\n  \"fromDate\" : \"2023-06-26 10:48:55\",\n  \"toDate\" : \"2023-06-26 11:48:55\"\n}\nprint(conn.get_health_trancievers(query_params))\nprint(\"....................HEALTH_TRANSCIEVERS....................\")\n</code></pre>"},{"location":"ONES-API/HEALTH-API/health-connect-methods/#health_running_services","title":"HEALTH_RUNNING_SERVICES","text":"<pre><code>print(\"....................HEALTH_RUNNING_SERVICES....................\")\nquery_params = {\n  \"fromDate\" : \"2023-05-12 11:55:24\",\n  \"toDate\" : \"2023-05-12 12:55:24\",\n  \"deviceAddress\" : \"10.4.4.55\"\n}\nprint(conn.get_health_running_services(query_params))\nprint(\"....................HEALTH_RUNNING_SERVICES....................\")\n</code></pre>"},{"location":"ONES-API/INENTORY-API/Inventory-api/","title":"Inventory APIs","text":"Method API's Status GET /inventory/Devices /api/inventory/Devices GET /inventory/Devices/peripherals /api/inventory/Devices/peripherals GET /inventory/Devices/interfaces /api/inventory/Devices/interfaces GET /inventory/Roles /api/inventory/Roles GET /inventory/SwithSKUs /api/inventory/SwitchSKUs GET /inventory/ASCIs /api/inventory/ASICs GET /inventory/AgentsVersion /api/inventory/AgentsVersion GET /inventory/NOSVersion /api/inventory/NOSVersion GET /inventory/LinuxVersion /api/inventory/LinuxVersion GET /inventory/ONIE Version /api/inventory/ONIEVersion GET /inventory/Cabling /api/inventory/Cabling"},{"location":"ONES-API/INENTORY-API/Inventory-client/","title":"Inventory client","text":""},{"location":"ONES-API/INENTORY-API/Inventory-client/#importing-necessary-modules","title":"Importing necessary modules","text":"<pre><code>import logging\nimport json\nimport requests\n</code></pre>"},{"location":"ONES-API/INENTORY-API/Inventory-client/#importing-endpoints","title":"Importing Endpoints","text":"<pre><code>from .endpoints import *\n\nfrom .excpetions import OnesClientExpection\nfrom .constants import *\nfrom .util import request_handler, request_handler_with_payload, request_handler_with_query_params\n</code></pre>"},{"location":"ONES-API/INENTORY-API/Inventory-client/#connect-onesclient","title":"Connect ONESclient","text":"<pre><code>class ONESClient(object):\n    def __init__(self, username=None, password=None, url=None):\n        self.username = username\n        self.password = password\n        self.url = url\n        self.access_token = None\n\n    def connect(self):\n        \"\"\"\n            This method will use to make connection\n            with Ones API,\n            It will use user, url,password, and  Authentication API\n        \"\"\"\n        try:\n            url = self.url + connect\n\n            payload = {\"username\": self.username, \"password\": self.password}\n\n            payload = json.dumps(payload)\n            headers = {\"Content-Type\": \"application/json\"}\n            response = requests.post(\n                url, data=payload, headers=headers, verify=False\n            )\n            if response.status_code == 200:\n                temp = response.json()\n                access_token = temp[\"data\"][\"token\"]\n                logging.debug(access_token)\n                self.access_token = access_token\n\n            else:\n                logging.error(\"Something went wrong\")\n\n        except Exception as err:\n            logging.error(f\"Error -&gt; ${err}\")\n            raise OnesClientExpection()\n</code></pre>"},{"location":"ONES-API/INENTORY-API/Inventory-client/#get_device_info","title":"get_device_info","text":"<pre><code> def get_device_info(self,arg1):\n        \"\"\"\n        query_params -&gt; {\"ipAddress\": \"10.4.4.61\"}\n        Output -&gt; List of device info\n        \"\"\"\n        request_handler_with_query_params(self.url, device_info_endpoint, self.access_token,None, arg1)\n</code></pre>"},{"location":"ONES-API/INENTORY-API/Inventory-client/#get_device_peripherals","title":"get_device_peripherals","text":"<pre><code> def get_device_peripherals(self, arg1):\n        \"\"\"\n        query_params -&gt; \"filter\": {\n                    {\n                    \"deviceAddress\" : \"0c:29:ef:ce:92:20\"\n                    }\n            }\n        Output -&gt; List of peripherals\n        \"\"\"\n        request_handler_with_query_params(self.url, device_peripherals, self.access_token, None, arg1)\n</code></pre>"},{"location":"ONES-API/INENTORY-API/Inventory-client/#get_device_interfaces","title":"get_device_interfaces","text":"<pre><code>def get_device_interfaces(self, arg1):\n        \"\"\"\n        Payload -&gt; \"filter\": {\n                 \"deviceAddress\": \"0c:29:ef:ce:92:20\"\n                }\n        Output -&gt; List of interfaces of a device\n        \"\"\"\n        request_handler_with_payload(self.url, device_interfaces, self.access_token, None, arg1)\n</code></pre>"},{"location":"ONES-API/INENTORY-API/Inventory-client/#get_device_roles","title":"get_device_roles","text":"<pre><code>def get_roles(self):\n        \"\"\"\n        This function will return all existings roles\n                Spine\n                SuperSpine\n                Tor\n                Leaf\n        \"\"\"\n        try:\n            url = self.url + roles\n            headers = {\n                \"Authorization\": self.access_token,\n                \"Content-Type\": \"application/json\",\n            }\n            response = requests.get(url, headers=headers, verify=False)\n            if response.status_code == 200:\n                res = response.json()\n                print(json.dumps(res, indent=4))\n                return True\n        except Exception as err:\n            logging.error(err)\n            raise OnesClientExpection(ROLES_ERROR)\n</code></pre>"},{"location":"ONES-API/INENTORY-API/Inventory-client/#get_switch_skus","title":"get_switch_skus","text":"<pre><code> def get_switch_skus(self):\n        \"\"\"\n        Return all switch SKUs\n        \"\"\"\n        request_handler(self.url, switch_skus, self.access_token, None)\n</code></pre>"},{"location":"ONES-API/INENTORY-API/Inventory-client/#get_asics_info","title":"get_asics_info","text":"<pre><code>def get_asics_info(self):\n        \"\"\"\n        Return all ASICs info\n        \"\"\"\n        request_handler(self.url, asics, self.access_token, None)\n</code></pre>"},{"location":"ONES-API/INENTORY-API/Inventory-client/#get_agent_version","title":"get_agent_version","text":"<pre><code>    def get_agent_version(self):\n        \"\"\"\n        Return Agent version\n        \"\"\"\n        request_handler(self.url, agent_version, self.access_token, None)\n</code></pre>"},{"location":"ONES-API/INENTORY-API/Inventory-client/#get_nos_version","title":"get_nos_version","text":"<pre><code>def get_nos_version(self):\n        \"\"\"\n        Return NOS version\n        \"\"\"\n        request_handler(self.url, nos_version, self.access_token, None)\n</code></pre>"},{"location":"ONES-API/INENTORY-API/Inventory-client/#get_linux_version","title":"get_linux_version","text":"<pre><code>def get_linux_version(self):\n        \"\"\"\n        Return linux version\n        \"\"\"\n        request_handler(self.url, linux_version, self.access_token, None)\n</code></pre>"},{"location":"ONES-API/INENTORY-API/Inventory-client/#get_onie_version","title":"get_onie_version","text":"<pre><code> def get_onie_version(self):\n        \"\"\"\n        Return ONIE version\n        \"\"\"\n        request_handler(self.url, onie_version, self.access_token, None)\n</code></pre>"},{"location":"ONES-API/INENTORY-API/Inventory-client/#get_cabling_info","title":"get_cabling_info","text":"<pre><code>def get_cabling_info(self):\n        \"\"\"\n        Return cabling INFO\n        \"\"\"\n        request_handler(self.url, cabling, self.access_token, None)\n</code></pre>"},{"location":"ONES-API/INENTORY-API/Inventory-connect-methods/","title":"Inventory connect methods","text":""},{"location":"ONES-API/INENTORY-API/Inventory-connect-methods/#calling-methods-for-inventory-apis","title":"Calling Methods for Inventory APIs","text":""},{"location":"ONES-API/INENTORY-API/Inventory-connect-methods/#hardware_info","title":"HARDWARE_INFO","text":"<pre><code>print(\"....................HARDWARE_INFO!!.....................\")\nprint(conn.get_hardware_info())\nprint(\"....................HARDWARE_INFO!!.....................\")\n</code></pre>"},{"location":"ONES-API/INENTORY-API/Inventory-connect-methods/#roles","title":"ROLES","text":"<pre><code>print(\"....................ROLES.....................\")\nprint(conn.get_roles())\nprint(\"....................ROLES.....................\")\n</code></pre>"},{"location":"ONES-API/INENTORY-API/Inventory-connect-methods/#swich_skus","title":"SWICH_SKUs","text":"<pre><code>print(\"....................SWITCH_SKUs.....................\")\nprint(conn.get_switch_skus())\nprint(\"....................SWITCH_SKUs.....................\")\n</code></pre>"},{"location":"ONES-API/INENTORY-API/Inventory-connect-methods/#asics_info","title":"ASICS_INFO","text":"<pre><code>print(\"....................ASICS_INFO.....................\")\nprint(conn.get_asics_info())\nprint(\"....................ASICS_INFO.....................\")\n</code></pre>"},{"location":"ONES-API/INENTORY-API/Inventory-connect-methods/#agent_info","title":"AGENT_INFO","text":"<pre><code>print(\"....................AGENT_IFNO.....................\")\nprint(conn.get_agent_version())\nprint(\"....................AGENT_INFO.....................\")\n</code></pre>"},{"location":"ONES-API/INENTORY-API/Inventory-connect-methods/#nos_version","title":"NOS_VERSION","text":"<pre><code>print(\"....................NOS_VERSION.....................\")\nprint(conn.get_nos_version())\nprint(\"....................NOS_VERSION.....................\")\n</code></pre>"},{"location":"ONES-API/INENTORY-API/Inventory-connect-methods/#linux_version","title":"LINUX_VERSION","text":"<pre><code>print(\"....................LINUX_INFO.....................\")\nprint(conn.get_linux_version())\nprint(\"....................LINUX_VERSION.....................\")\n</code></pre>"},{"location":"ONES-API/INENTORY-API/Inventory-connect-methods/#onie_version","title":"ONIE_VERSION","text":"<pre><code>print(\"....................ONIE_VERSION.....................\")\nprint(conn.get_onie_version())\nprint(\"....................ONIE_VERSION.....................\")\n</code></pre>"},{"location":"ONES-API/INENTORY-API/Inventory-connect-methods/#cabling_info","title":"CABLING_INFO","text":"<pre><code>print(\"....................CABLING_INFO.....................\")\nprint(conn.get_cabling_info())\nprint(\"....................CABLING_INFO.....................\")\n</code></pre>"},{"location":"ONES-API/INENTORY-API/Inventory-connect-methods/#device_interfaces","title":"DEVICE_INTERFACES","text":"<pre><code>print(\"....................Device_Interfaces.....................\")\npayload  =  {\n  \"filter\": {\n    \"deviceAddress\": \"0c:29:ef:ce:92:20\"\n  }\n}\nprint(conn.get_device_interfaces(payload))\nprint(\"....................Device_Interfaces.....................\")\n</code></pre>"},{"location":"ONES-API/INENTORY-API/Inventory-connect-methods/#device_peripherals","title":"DEVICE_PERIPHERALS","text":"<pre><code>print(\"....................Device_Peripherals....................\")\nquery_params  =  {\"deviceAddress\" : \"0c:29:ef:ce:92:20\"}\nprint(conn.get_device_peripherals(query_params))\nprint(\"....................Device_Peripherals.....................\")\n</code></pre>"},{"location":"ONES-API/INENTORY-API/Inventory-connect-methods/#device_info","title":"DEVICE_INFO","text":"<pre><code>print(\"....................Device_INFO....................\")\nquery_params  =  {\"ipAddress\": \"10.4.4.61\"}\nprint(conn.get_device_info(query_params))\nprint(\"....................Device_INFO.....................\")\n</code></pre>"},{"location":"ONES-API/TOPOLOGY-API/Topology-api/","title":"ToplogyAPI","text":"Method API Status GET /topology/ /api/Topologies/graphV2"},{"location":"ONES-API/TOPOLOGY-API/Topology-client/","title":"Topology client","text":""},{"location":"ONES-API/TOPOLOGY-API/Topology-client/#get_network_topology","title":"get_network_topology","text":"<pre><code>def get_network_topology(self):\n        \"\"\"\n        Output -&gt; List of devices and connections\n        \"\"\"\n        request_handler(self.url,network_topology, self.access_token, None )\n</code></pre>"},{"location":"ONES-API/TOPOLOGY-API/Topology-connect-method/","title":"Topology connect method","text":""},{"location":"ONES-API/TOPOLOGY-API/Topology-connect-method/#calling-method-for-topology","title":"Calling Method For Topology","text":""},{"location":"ONES-API/TOPOLOGY-API/Topology-connect-method/#network_topology_info","title":"NETWORK_TOPOLOGY_INFO","text":"<pre><code>print(\".....................NETWORK_TOPOLOGY.....................\")\nprint(conn.get_network_topology())\nprint(\".....................NETWORK_TOPOLOGY.....................\")\n</code></pre>"},{"location":"ONES-API/TRAFFIC%20API/Traffic-api/","title":"Traffic APIs","text":"Method API Status GET Traffic/util /api/Traffic/util GET Traffic/counters /api/Traffic/Counters"},{"location":"ONES-API/TRAFFIC%20API/Traffic-client/","title":"Traffic client","text":""},{"location":"ONES-API/TRAFFIC%20API/Traffic-client/#get_traffic_util","title":"get_traffic_util","text":"<pre><code>def get_traffic_util(self, arg1):\n        \"\"\" \n        query_params -&gt; \"filter\" : {\n            {\n                \"fromDate\" : \"2023-04-04 04:54:27\",\n                \"toDate\" : \"2023-04-04 05:54:27\",\n                \"deviceAddress\" : \"10.4.4.55\",\n                \"ifname\" : \"Ethernet0\"\n            }\n        }\n        \"\"\"\n        request_handler_with_query_params(self.url, traffic_util, self.access_token, None, arg1)\n</code></pre>"},{"location":"ONES-API/TRAFFIC%20API/Traffic-client/#get_traffic_counters","title":"get_traffic_counters","text":"<pre><code>def get_traffic_counters(self, arg1):\n        \"\"\" \n        query_params -&gt; \"filter\" : {\n            {\n                \"fromDate\" : \"2023-04-04 04:54:27\",\n                \"toDate\" : \"2023-04-04 05:54:27\",\n                \"deviceAddress\" : \"10.4.4.55\",\n                \"ifname\" : \"Ethernet0\"\n            }\n        }\n        \"\"\"\n        request_handler_with_query_params(self.url, traffic_counters, self.access_token, None, arg1)\n</code></pre>"},{"location":"ONES-API/TRAFFIC%20API/Traffic-connect-method/","title":"Traffic connect method","text":""},{"location":"ONES-API/TRAFFIC%20API/Traffic-connect-method/#calling-methods-for-traffic-apis","title":"Calling Methods For Traffic APIs","text":""},{"location":"ONES-API/TRAFFIC%20API/Traffic-connect-method/#traffic_util","title":"TRAFFIC_UTIL","text":"<pre><code>print(\"....................TRAFFIC_UTIL....................\")\nquery_params = {\n    \"fromDate\" : \"2023-04-04 04:54:27\",\n    \"toDate\" : \"2023-04-04 05:54:27\",\n    \"deviceAddress\" : \"10.4.4.55\",\n    \"ifname\" : \"Ethernet0\"\n}\nprint(conn.get_traffic_util(query_params))\nprint(\"....................TRAFFIC_UTIL....................\")\n</code></pre>"},{"location":"ONES-API/TRAFFIC%20API/Traffic-connect-method/#traffic_counters","title":"TRAFFIC_COUNTERS","text":"<pre><code>print(\"....................TRAFFIC_COUNTERS....................\")\nquery_params = {\n    \"fromDate\" : \"2023-04-04 04:54:27\",\n    \"toDate\" : \"2023-04-04 05:54:27\",\n    \"deviceAddress\" : \"10.4.4.55\",\n    \"ifname\" : \"Ethernet0\"\n}\nprint(conn.get_traffic_counters(query_params))\nprint(\"....................TRAFFIC_COUNTERS....................\")\n</code></pre>"}]}